{"version":3,"sources":["../../src/index.js"],"names":["inputLayer","hiddenLayer","outputLayer","project","myNANDNetwork","input","hidden","output","myXORNetwork","myORNetwork","myANDNetwork","learningRate","initializeTrainNANDNetwork","i","activate","propagate","initializeTrainXORNetwork","initializeTrainORNetwork","initializeTrainANDNetwork","fillTable","network","table","j","createTruthTable","tr","document","createElement","th1","th2","cloneNode","th3","setAttribute","style","textAlign","text1","createTextNode","text2","text3","Math","round","appendChild","getElementById"],"mappings":"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","file":"index.js","sourcesContent":["import {Layer, Network} from 'synaptic';\r\n\r\nlet inputLayer = new Layer(2);\r\nlet hiddenLayer = new Layer(3);\r\nlet outputLayer = new Layer(1);\r\n\r\ninputLayer.project(hiddenLayer);\r\nhiddenLayer.project(outputLayer);\r\n\r\nlet myNANDNetwork = new Network({\r\n    input: inputLayer,\r\n    hidden: [hiddenLayer],\r\n    output: outputLayer\r\n});\r\n\r\nlet myXORNetwork = new Network({\r\n    input: inputLayer,\r\n    hidden: [hiddenLayer],\r\n    output: outputLayer\r\n});\r\n\r\nlet myORNetwork = new Network({\r\n    input: inputLayer,\r\n    hidden: [hiddenLayer],\r\n    output: outputLayer\r\n});\r\n\r\nlet myANDNetwork = new Network({\r\n    input: inputLayer,\r\n    hidden: [hiddenLayer],\r\n    output: outputLayer\r\n});\r\n\r\nconst learningRate = .3;\r\n\r\nfunction initializeTrainNANDNetwork(myNANDNetwork){\r\n\r\n    for(let i=0; i < 20000; i++){\r\n        // 0,0 => 1\r\n        myNANDNetwork.activate([0,0]);\r\n        myNANDNetwork.propagate(learningRate, [1]);\r\n\r\n        // 0,1 => 1\r\n        myNANDNetwork.activate([0,1]);\r\n        myNANDNetwork.propagate(learningRate, [1]);\r\n\r\n        // 1,0 => 1\r\n        myNANDNetwork.activate([1,0]);\r\n        myNANDNetwork.propagate(learningRate, [1]);\r\n\r\n        // 1,1 => 0\r\n        myNANDNetwork.activate([1,1]);\r\n        myNANDNetwork.propagate(learningRate, [0]);\r\n    }\r\n}\r\n\r\nfunction initializeTrainXORNetwork(myXORNetwork){\r\n\r\n    for(let i=0; i < 20000; i++){\r\n        // 0,0 => 0\r\n        myXORNetwork.activate([0,0]);\r\n        myXORNetwork.propagate(learningRate, [0]);\r\n\r\n        // 0,1 => 1\r\n        myXORNetwork.activate([0,1]);\r\n        myXORNetwork.propagate(learningRate, [1]);\r\n\r\n        // 1,0 => 1\r\n        myXORNetwork.activate([1,0]);\r\n        myXORNetwork.propagate(learningRate, [1]);\r\n\r\n        // 1,1 => 0\r\n        myXORNetwork.activate([1,1]);\r\n        myXORNetwork.propagate(learningRate, [0]);\r\n    }\r\n}\r\n\r\nfunction initializeTrainORNetwork(myORNetwork){\r\n\r\n    for(let i=0; i < 20000; i++){\r\n        // 0,0 => 0\r\n        myORNetwork.activate([0,0]);\r\n        myORNetwork.propagate(learningRate, [0]);\r\n\r\n        // 0,1 => 1\r\n        myORNetwork.activate([0,1]);\r\n        myORNetwork.propagate(learningRate, [1]);\r\n\r\n        // 1,0 => 1\r\n        myORNetwork.activate([1,0]);\r\n        myORNetwork.propagate(learningRate, [1]);\r\n\r\n        // 1,1 => 1\r\n        myORNetwork.activate([1,1]);\r\n        myORNetwork.propagate(learningRate, [1]);\r\n    }\r\n}\r\n\r\nfunction initializeTrainANDNetwork(myANDNetwork){\r\n\r\n    for(let i=0; i < 20000; i++){\r\n        // 0,0 => 0\r\n        myANDNetwork.activate([0,0]);\r\n        myANDNetwork.propagate(learningRate, [0]);\r\n\r\n        // 0,1 => 0\r\n        myANDNetwork.activate([0,1]);\r\n        myANDNetwork.propagate(learningRate, [0]);\r\n\r\n        // 1,0 => 0\r\n        myANDNetwork.activate([1,0]);\r\n        myANDNetwork.propagate(learningRate, [0]);\r\n\r\n        // 1,1 => 1\r\n        myANDNetwork.activate([1,1]);\r\n        myANDNetwork.propagate(learningRate, [1]);\r\n    }\r\n}\r\n\r\nfunction fillTable(network, table){\r\n    for(let i = 0; i < 2; i++)\r\n        for(let j=0; j < 2; j++) {\r\n            createTruthTable(i,j,network, table);\r\n        }\r\n}\r\n\r\nfunction createTruthTable(i, j, network, table){\r\n    let tr = document.createElement(\"tr\");\r\n    let th1 = document.createElement(\"th\");\r\n    let th2 = th1.cloneNode(true);\r\n    let th3 = th1.cloneNode(true);\r\n    th3.setAttribute(\"colspan\",\"2\");\r\n    th3.style.textAlign = \"center\";\r\n    let text1 = document.createTextNode(\"\" + i);\r\n    let text2 = document.createTextNode(\"\" + j);\r\n    let text3 = document.createTextNode(\"\" + Math.round(network.activate([i, j])));\r\n    th1.appendChild(text1);\r\n    th2.appendChild(text2);\r\n    th3.appendChild(text3);\r\n\r\n    tr.appendChild(th1);\r\n    tr.appendChild(th2);\r\n    tr.appendChild(th3);\r\n    document.getElementById(table).appendChild(tr);\r\n}\r\n\r\n\r\ninitializeTrainNANDNetwork(myNANDNetwork);\r\nfillTable(myNANDNetwork, \"nandTable\");\r\n\r\ninitializeTrainXORNetwork(myXORNetwork);\r\nfillTable(myXORNetwork, \"xorTable\");\r\n\r\ninitializeTrainORNetwork(myORNetwork);\r\nfillTable(myORNetwork, \"orTable\");\r\n\r\ninitializeTrainANDNetwork(myANDNetwork);\r\nfillTable(myANDNetwork, \"andTable\");\r\n\r\n\r\n\r\n"]}